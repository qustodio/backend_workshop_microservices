# 'fullnameOverride' is deprecated. Use 'deployment.instance_name' instead.
# This is only supported for backward compatibility and will be removed in a future version.
# If 'fullnameOverride' is not "kiali" and 'deployment.instance_name' is "kiali",
# then 'deployment.instance_name' will take the value of 'fullnameOverride' value.
# Otherwise, 'fullnameOverride' is ignored and 'deployment.instance_name' is used.
fullnameOverride: "kiali"

# This is required for "openshift" auth strategy.
# You have to know ahead of time what your Route URL will be because
# right now the helm chart can't figure this out at runtime (it would
# need to wait for the Kiali Route to be deployed and for OpenShift
# to start it up). If someone knows how to update this helm chart to
# do this, a PR would be welcome.
kiali_route_url: ""

#
# Settings that mimic the Kiali CR which are placed in the ConfigMap.
# Note that only those values used by the Helm Chart will be here.
#

istio_namespace: "" # default is where Kiali is installed

auth:
  openid: {}
  openshift: {}
  strategy: "anonymous"

deployment:
  # This only limits what Kiali will attempt to see, but Kiali Service Account has permissions to see everything.
  # For more control over what the Kial Service Account can see, use the Kiali Operator
  accessible_namespaces:
  - "**"
  additional_service_yaml: {}
  affinity:
    node: {}
    pod: {}
    pod_anti: {}
  custom_secrets: []
  host_aliases: []
  hpa:
    api_version: "autoscaling/v2beta2"
    spec: {}
  image_digest: "" # use "sha256" if image_version is a sha256 hash (do NOT prefix this value with a "@")
  image_name: quay.io/kiali/kiali
  image_pull_policy: "Always"
  image_pull_secrets: []
  image_version: v1.43.0 # version like "v1.39" (see: https://quay.io/repository/kiali/kiali?tab=tags) or a digest hash
  ingress:
    class_name: "nginx"
    enabled: true
    override_yaml:
      metadata: {}
  instance_name: "kiali"
  logger:
    log_format: "text"
    log_level: "info"
    time_field_format: "2006-01-02T15:04:05Z07:00"
    sampler_rate: "1"
  node_selector: {}
  pod_annotations: {}
  pod_labels: {}
  priority_class_name: ""
  replicas: 1
  resources: {}
  secret_name: "kiali"
  service_annotations: {}
  service_type: ""
  tolerations: []
  version_label: v1.43.0 # v1.39 # v1.39.0 # see: https://quay.io/repository/kiali/kiali?tab=tags
  view_only_mode: false

external_services:
  custom_dashboards:
    enabled: true
  istio:
    root_namespace: "istio-system"
  prometheus:
    enabled: true
    is_core: true
    url: "http://prometheus-stack-kube-prom-prometheus.prometheus-stack.svc.cluster.local:9090"
  istio:
    component_status:
      components:
      - app_label: istiod
        is_core: true
        is_proxy: false
      - app_label: istio-ingress
        is_core: false
        is_proxy: true
        namespace: istio-ingress
    enabled: true
    config_map_name: "istio"
    envoy_admin_local_port: 15000
    istio_identity_domain: "svc.cluster.local"
    istio_injection_annotation: "sidecar.istio.io/inject"
    istio_sidecar_annotation: "sidecar.istio.io/status"
    istio_sidecar_injector_config_map_name: "istio-sidecar-injector"
    istiod_deployment_name: "istiod"
    root_namespace: ""
    url_service_version: ""

  grafana:
    enabled: true
    auth:
      username: "admin"
      password: "prom-operator"
      type: "basic"
    url: "http://prometheus-stack-grafana.prometheus-stack.svc.cluster.local:80"
    in_cluster_url: "http://prometheus-stack-grafana.prometheus-stack.svc.cluster.local:80"
  tracing:
    enabled: false
identity: {}
  #cert_file:
  #private_key_file:

kiali_feature_flags:
  certificates_information_indicators:
   enabled: true
   secrets:
   - cacerts
   - istio-ca-secret
  clustering:
    enabled: true
login_token:
  signing_key: ""

server:
  port: 20001
  metrics_enabled: true
  metrics_port: 9090
  web_root: "/kiali"

kubernetes_config:
  excluded_workloads:
  - "CronJob"
  - "DeploymentConfig"
  - "ReplicationController"

