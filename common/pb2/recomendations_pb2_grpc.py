# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from common.pb2 import recomendations_pb2 as recomendator_dot_recomendations__pb2


class RecomendationsControllerStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.List = channel.unary_stream(
        '/recomendator.RecomendationsController/List',
        request_serializer=recomendator_dot_recomendations__pb2.RecomendationsRequest.SerializeToString,
        response_deserializer=recomendator_dot_recomendations__pb2.Book.FromString,
        )


class RecomendationsControllerServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def List(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_RecomendationsControllerServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'List': grpc.unary_stream_rpc_method_handler(
          servicer.List,
          request_deserializer=recomendator_dot_recomendations__pb2.RecomendationsRequest.FromString,
          response_serializer=recomendator_dot_recomendations__pb2.Book.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'recomendator.RecomendationsController', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
